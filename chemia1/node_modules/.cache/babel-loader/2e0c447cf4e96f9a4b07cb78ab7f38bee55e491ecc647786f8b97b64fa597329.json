{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0410\\u0434\\u043C\\u0438\\u043D\\u0438\\u0441\\u0442\\u0440\\u0430\\u0442\\u043E\\u0440\\\\Desktop\\\\\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430 (13)\\\\chemia\\\\src\\\\pages\\\\Showcase.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport products from './products';\nimport './Showcase.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Showcase = ({\n  addToCart\n}) => {\n  _s();\n  const [addedItems, setAddedItems] = useState({});\n  const [sortOrder, setSortOrder] = useState(null);\n  const handleAddToCart = product => {\n    addToCart(product);\n    setAddedItems(prev => ({\n      ...prev,\n      [product.name]: true\n    }));\n    setTimeout(() => {\n      setAddedItems(prev => ({\n        ...prev,\n        [product.name]: false\n      }));\n    }, 1000);\n  };\n\n  // Функция для преобразования строки в число (удаляет \"грн.\", пробелы, запятые и приводит к числу)\n  const parsePrice = priceStr => {\n    return parseFloat(priceStr.replace(/[^\\d.]/g, '').replace(',', '') // Удаляем всё, кроме цифр и точки\n    );\n  };\n  const sortedProducts = () => {\n    if (sortOrder === 'asc') {\n      return [...products].sort((a, b) => parsePrice(a.price) - parsePrice(b.price));\n    } else if (sortOrder === 'desc') {\n      return [...products].sort((a, b) => parsePrice(b.price) - parsePrice(a.price));\n    } else {\n      return products;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"showcase\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"\\u0422\\u043E\\u0432\\u0430\\u0440\\u044B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sort-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSortOrder(null),\n        className: `sort-button ${sortOrder === null ? 'active' : ''}`,\n        children: \"\\u041F\\u043E \\u0443\\u043C\\u043E\\u043B\\u0447\\u0430\\u043D\\u0438\\u044E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSortOrder('asc'),\n        className: `sort-button ${sortOrder === 'asc' ? 'active' : ''}`,\n        children: \"\\u041F\\u043E \\u0432\\u043E\\u0437\\u0440\\u0430\\u0441\\u0442\\u0430\\u043D\\u0438\\u044E \\u2191\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSortOrder('desc'),\n        className: `sort-button ${sortOrder === 'desc' ? 'active' : ''}`,\n        children: \"\\u041F\\u043E \\u0443\\u0431\\u044B\\u0432\\u0430\\u043D\\u0438\\u044E \\u2193\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"products\",\n      children: sortedProducts().map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"product\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: product.image,\n          alt: product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"product-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"product-price\",\n            children: product.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAddToCart(product),\n            className: `add-button ${addedItems[product.name] ? 'added' : ''}`,\n            children: addedItems[product.name] ? '✔ Добавлено!' : 'Добавить в корзину'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, product.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Showcase, \"1ZWLCC9haPIx8BdzKH/bKHITF00=\");\n_c = Showcase;\nexport default Showcase;\nvar _c;\n$RefreshReg$(_c, \"Showcase\");","map":{"version":3,"names":["React","useState","products","jsxDEV","_jsxDEV","Showcase","addToCart","_s","addedItems","setAddedItems","sortOrder","setSortOrder","handleAddToCart","product","prev","name","setTimeout","parsePrice","priceStr","parseFloat","replace","sortedProducts","sort","a","b","price","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","src","image","alt","_c","$RefreshReg$"],"sources":["C:/Users/Администратор/Desktop/Новая папка (13)/chemia/src/pages/Showcase.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport products from './products';\r\nimport './Showcase.css';\r\n\r\nconst Showcase = ({ addToCart }) => {\r\n  const [addedItems, setAddedItems] = useState({});\r\n  const [sortOrder, setSortOrder] = useState(null);\r\n\r\n  const handleAddToCart = (product) => {\r\n    addToCart(product);\r\n    setAddedItems((prev) => ({ ...prev, [product.name]: true }));\r\n    setTimeout(() => {\r\n      setAddedItems((prev) => ({ ...prev, [product.name]: false }));\r\n    }, 1000);\r\n  };\r\n\r\n  // Функция для преобразования строки в число (удаляет \"грн.\", пробелы, запятые и приводит к числу)\r\n  const parsePrice = (priceStr) => {\r\n    return parseFloat(\r\n      priceStr.replace(/[^\\d.]/g, '').replace(',', '') // Удаляем всё, кроме цифр и точки\r\n    );\r\n  };\r\n\r\n  const sortedProducts = () => {\r\n    if (sortOrder === 'asc') {\r\n      return [...products].sort((a, b) => parsePrice(a.price) - parsePrice(b.price));\r\n    } else if (sortOrder === 'desc') {\r\n      return [...products].sort((a, b) => parsePrice(b.price) - parsePrice(a.price));\r\n    } else {\r\n      return products;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"showcase\">\r\n      <h1 className=\"text-xl font-bold mb-4\">Товары</h1>\r\n\r\n      <div className=\"sort-buttons\">\r\n        <button\r\n          onClick={() => setSortOrder(null)}\r\n          className={`sort-button ${sortOrder === null ? 'active' : ''}`}\r\n        >\r\n          По умолчанию\r\n        </button>\r\n        <button\r\n          onClick={() => setSortOrder('asc')}\r\n          className={`sort-button ${sortOrder === 'asc' ? 'active' : ''}`}\r\n        >\r\n          По возрастанию ↑\r\n        </button>\r\n        <button\r\n          onClick={() => setSortOrder('desc')}\r\n          className={`sort-button ${sortOrder === 'desc' ? 'active' : ''}`}\r\n        >\r\n          По убыванию ↓\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"products\">\r\n        {sortedProducts().map((product) => (\r\n          <div key={product.name} className=\"product\">\r\n            <img src={product.image} alt={product.name} />\r\n            <div className=\"product-info\">\r\n              <h3>{product.name}</h3>\r\n              <p className=\"product-price\">{product.price}</p>\r\n              <button\r\n                onClick={() => handleAddToCart(product)}\r\n                className={`add-button ${addedItems[product.name] ? 'added' : ''}`}\r\n              >\r\n                {addedItems[product.name] ? '✔ Добавлено!' : 'Добавить в корзину'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Showcase;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}